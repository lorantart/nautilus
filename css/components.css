/*

component:  Text Field
src:        https://codepen.io/sevilayha/pen/IdGKH

*/


.group {
  position: relative;
}

form {
  display: flex;
  flex-direction: column;
}

input {
  font-size: 16px;
  padding: 10px 10px 10px 0;
  display: block;
  border: none;
  border-bottom: 1px solid #CFD8DC;
}

input:focus {
  outline: none;
}

.group label {
  color: #607D8B;
  font-size: 16px;
  font-weight: normal;
  position: absolute;
  pointer-events: none;
  left: 0;
  top: 16px;
  transition: 0.2s ease all;
  -moz-transition: 0.2s ease all;
  -webkit-transition: 0.2s ease all;
}

/* active state */
input:focus ~ label {
  top: -20px;
  font-size: 14px;
  color: #3D5AFE;
}

/* BOTTOM BARS ================================= */
.bar 	{
  position: relative;
  display: block;
}

.bar:before, .bar:after 	{
  content: '';
  height: 2px;
  width: 0;
  bottom: 0;
  position: absolute;
  background: #3D5AFE;
  transition: 0.2s ease all;
  -moz-transition: 0.2s ease all;
  -webkit-transition: 0.2s ease all;
}

.bar:before {
  left: 50%;
}

.bar:after {
  right: 50%;
}

/* active state */
input:focus ~ .bar:before, input:focus ~ .bar:after {
  width: 50%;
}
/* active state */







/*

component:  Main CTA
src:        https://codepen.io/sevilayha/pen/IdGKH

*/

.component__primary-cta {
    display: inline-block;

    height: 64px;
    padding: 0 48px;
    border-radius: 32px;
    background-color: #E91E63;

    text-transform: uppercase;
    text-align: center;
    font-size: 14px;
    line-height: 64px;
    letter-spacing: 4px;
    color: #ffffff;

    cursor: pointer;
    transition: box-shadow 0.2s ease-in-out, background-color 0.1s ease-in-out;

}

.component__primary-cta:hover {

    box-shadow: 0 4px 16px 8px rgba(227, 19, 107, 0.15);
}

.component__primary-cta:active {
    background-color: #D81B60;

    outline: 0;
}

.component__primary-cta:focus {
    outline: 0;
     box-shadow: 0 0 2px 4px #64B5F6;
}






/*

component:  Checkboxes
src:        https://codepen.io/abottega/pen/vNzQMo

*/


.checkbox {
  display: inline-block;
  padding: 0;
  transform: translateZ(0);
}

.checkbox-text {
  display: inline-block;
  vertical-align: middle;
  width: calc(100% - 33px);
}

.checkbox label {
  cursor: pointer;
}

.checkbox input[type=checkbox] {
  opacity: 0;
  position: absolute;
  margin: 0;
  z-index: -1;
  width: 0;
  height: 0;
  overflow: hidden;
  left: 0;
  pointer-events: none;
}

.checkbox .checkbox-material {
  vertical-align: middle;
  position: relative;
  top: 3px;
  padding-right: 8px;
}

.checkbox .checkbox-material:before {
  position: absolute;
  left: 8px;
  top: 2px;
  content: "";
  background-color: rgba(0, 0, 0, 0.5);
  height: 4px;
  width: 4px;
  border-radius: 100%;
  z-index: 1;
  opacity: 0;
  margin: 0;
}

.checkbox .checkbox-material .check {
  position: relative;
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 2px solid;
  border-radius: 2px;
  overflow: hidden;
  z-index: 1;
}
.checkbox .checkbox-material .check:before {
  position: absolute;
  content: "";
  transform: rotate(45deg);
  display: block;
  margin-top: -4px;
  margin-left: 6px;
  width: 0;
  height: 0;
  box-shadow: 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0 inset;
  animation: checkbox-off 0.3s forwards ease-out;
}
.checkbox input[type=checkbox]:focus + .checkbox-material .check:after {
  opacity: 0.2;
}
.checkbox input[type=checkbox]:checked + .checkbox-material .check:before {
  box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0px 0 20px, 0px 32px 0 20px, -5px 5px 0 10px, 20px -12px 0 11px;
  animation: checkbox-on 0.3s forwards ease-out;
}
.checkbox input[type=checkbox]:not(:checked) + .checkbox-material:before {
  animation: rippleOff 700ms forwards ease-out;
}
.checkbox input[type=checkbox]:checked + .checkbox-material:before {
  animation: rippleOn 700ms forwards ease-out;
}
.checkbox input[type=checkbox]:not(:checked) + .checkbox-material .check:after {
  animation: rippleOff 700ms forwards ease-out;
}
.checkbox input[type=checkbox]:checked + .checkbox-material .check:after {
  animation: rippleOn 700ms forwards ease-out;
}
.checkbox input[type=checkbox][disabled]:not(:checked) ~ .checkbox-material .check:before,
.checkbox input[type=checkbox][disabled] + .circle {
  opacity: 0.5;
}
.checkbox input[type=checkbox][disabled] + .checkbox-material .check:after {
  background-color: rgba(0, 0, 0, 0.84);
  transform: rotate(-45deg);
}

.coloured .checkbox-material .check {
  color: #3D5AFE;
}
.coloured .checkbox-material:before {
  background-color: #3D5AFE;
}
.coloured input[type=checkbox]:checked + .checkbox-material .check {
  color: #3D5AFE;
}

@keyframes checkbox-on {
  0% {
    box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0px 0 20px, 0px 32px 0 20px, -5px 5px 0 10px, 15px 2px 0 11px;
  }
  50% {
    box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0px 0 20px, 0px 32px 0 20px, -5px 5px 0 10px, 20px 2px 0 11px;
  }
  100% {
    box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0px 0 20px, 0px 32px 0 20px, -5px 5px 0 10px, 20px -12px 0 11px;
  }
}
@keyframes checkbox-off {
  0% {
    box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0px 0 20px, 0px 32px 0 20px, -5px 5px 0 10px, 20px -12px 0 11px, 0 0 0 0 inset;
  }
  25% {
    box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0px 0 20px, 0px 32px 0 20px, -5px 5px 0 10px, 20px -12px 0 11px, 0 0 0 0 inset;
  }
  50% {
    transform: rotate(45deg);
    margin-top: -4px;
    margin-left: 6px;
    width: 0px;
    height: 0px;
    box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0px 0 20px, 0px 32px 0 20px, -5px 5px 0 10px, 15px 2px 0 11px, 0 0 0 0 inset;
  }
  51% {
    transform: rotate(0deg);
    margin-top: -2px;
    margin-left: -2px;
    width: 20px;
    height: 20px;
    box-shadow: 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0px 0px 0 10px inset;
  }
  100% {
    transform: rotate(0deg);
    margin-top: -2px;
    margin-left: -2px;
    width: 20px;
    height: 20px;
    box-shadow: 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0px 0px 0 0px inset;
  }
}
@keyframes rippleOn {
  0% {
    opacity: 0.5;
  }
  100% {
    opacity: 0;
    transform: scale(13, 13);
  }
}
@keyframes rippleOff {
  0% {
    opacity: 0.5;
  }
  100% {
    opacity: 0;
    transform: scale(13, 13);
  }
}
